{"version":3,"sources":["BooksAPI.js","Components/BookSelectOptions.js","Components/BookComponent.js","Components/BookShelf.js","Components/Pages/SearchPage.js","Components/Pages/BookShelfList.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","catch","e","console","error","search","query","BookSelectOptions","state","selected","_this","props","handleChange","_callee","value","regenerator_default","a","wrap","_context","prev","next","target","setSelectedShelf","updateData","stop","this","setState","onChangeLoading","_this$props","getData","selectedShelf","react_default","createElement","className","onChange","disabled","Component","BookComponent","style","width","height","backgroundImage","imageLinks","smallThumbnail","BookSelectOptions_BookSelectOptions","title","authors","map","author","key","BookShelf","shelfTitle","BookList","index","BookComponent_BookComponent","SearchPage","result","getSearchData","onAddShelf","alert","handleInputChange","handleSubmit","preventDefault","getBooksData","bookList","react_router_dom","to","onSubmit","type","placeholder","BookShelf_BookShelf","length","BookShelfList","_this$props$shelves","shelves","currentlyReading","wantToRead","read","isLoading","BooksApp","log","categorizeBooks","_this$state","keys","defineProperty","filterBookShelf","filter","_this2","_this$state2","react_router","exact","path","render","BookShelfList_BookShelfList","SearchPage_SearchPage","React","ReactDOM","src_App","document","getElementById"],"mappings":"oTAAMA,EAAM,wCAGRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAC/BC,SAAS,IACTC,QAAQ,IAEb,IAAMC,EAAU,CACdC,OAAQ,mBACRC,cAAeR,GAQJS,EAAS,kBACpBC,MAAK,GAAAC,OAAIZ,EAAJ,UAAiB,CAAEO,YACrBM,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACG,GAAD,OAAUA,EAAKC,SAEZC,EAAS,SAACC,EAAMC,GAAP,OACpBT,MAAK,GAAAC,OAAIZ,EAAJ,WAAAY,OAAiBO,EAAKE,IAAM,CAC/BC,OAAQ,MACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAER,YAEtBP,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBc,MAAM,SAACC,GAAD,OAAOC,QAAQC,MAAMF,MAEnBG,EAAS,SAACC,GAAD,OACpBvB,MAAK,GAAAC,OAAIZ,EAAJ,WAAkB,CACrBsB,OAAQ,OACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEM,YAEtBrB,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACG,GAAD,OAAUA,EAAKC,SC1CJkB,6MAOnBC,MAAQ,CACNC,SAAUC,EAAKC,MAAMpB,KAAKC,SAG5BoB,mDAAe,SAAAC,EAAOX,GAAP,IAAAY,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLN,EAAUZ,EAAEmB,OAAZP,MADKI,EAAAE,KAAA,EAEPV,EAAKY,iBAAiBR,GAFf,OAGbJ,EAAKa,aAHQ,wBAAAL,EAAAM,SAAAX,EAAAY,iEAMfH,iBAAmB,SAACR,GAClBJ,EAAKgB,SAAS,SAAClB,GAAD,MAAY,CACxBC,SAAUK,KAERJ,EAAKC,MAAMgB,iBACbjB,EAAKC,MAAMgB,iBAAgB,MAI/BJ,WAAa,WAAM,IAAAK,EACSlB,EAAKC,MAAvBpB,EADSqC,EACTrC,KAAMsC,EADGD,EACHC,QACRC,EAAgBpB,EAAKF,MAAMC,SACjCnB,EAAOC,EAAMuC,GAAe7C,KAAK,WAC/B4C,+EAKF,OACEE,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,sBACbF,EAAAf,EAAAgB,cAAA,UAAQlB,MAAOW,KAAKjB,MAAMC,UAAY,GAAIyB,SAAUT,KAAKb,cACvDmB,EAAAf,EAAAgB,cAAA,UAAQlB,MAAM,OAAOqB,UAAQ,GAA7B,cAGAJ,EAAAf,EAAAgB,cAAA,UAAQlB,MAAM,oBAAd,qBACAiB,EAAAf,EAAAgB,cAAA,UAAQlB,MAAM,cAAd,gBACAiB,EAAAf,EAAAgB,cAAA,UAAQlB,MAAM,QAAd,QACAiB,EAAAf,EAAAgB,cAAA,UAAQlB,MAAM,QAAd,iBA5CqCsB,aCA1BC,mLAOV,IAAAT,EACoCH,KAAKd,MAAxCpB,EADDqC,EACCrC,KAAMsC,EADPD,EACOC,QAASF,EADhBC,EACgBD,gBACvB,OACEI,EAAAf,EAAAgB,cAAA,UACED,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,QACbF,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,YACbF,EAAAf,EAAAgB,cAAA,OACEC,UAAU,aACVK,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAe,OAAAzD,OAASO,EAAKmD,WAAWC,eAAzB,QAGnBZ,EAAAf,EAAAgB,cAACY,EAAD,CACEf,QAASA,EACTtC,KAAMA,EACNoC,gBAAiBA,KAGrBI,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,cAAc1C,EAAKsD,OAClCd,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,gBACZ1C,EAAKuD,QAAQC,IAAI,SAACC,GAAD,OAChBjB,EAAAf,EAAAgB,cAAA,QAAMiB,IAAKD,GAAX,KACKA,EACHjB,EAAAf,EAAAgB,cAAA,wBAhC2BI,aCAtBc,mLAQV,IAAAtB,EACoDH,KAAKd,MAAxDwC,EADDvB,EACCuB,WAAYC,EADbxB,EACawB,SAAUvB,EADvBD,EACuBC,QAASF,EADhCC,EACgCD,gBACvC,OACEI,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,aACbF,EAAAf,EAAAgB,cAAA,MAAIC,UAAU,mBAAmBkB,GACjCpB,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,mBACbF,EAAAf,EAAAgB,cAAA,MAAIC,UAAU,cACXmB,GACCA,EAASL,IAAI,SAACxD,EAAM8D,GAAP,OACXtB,EAAAf,EAAAgB,cAACsB,EAAD,CACEL,IAAKI,EACL9D,KAAMA,EACNsC,QAASA,EACTF,gBAAiBA,gBArBIS,aCElBmB,6MAMnB/C,MAAQ,CACNF,MAAO,GACPkD,OAAQ,MAGVC,cAAgB,WAAM,IACZ9B,EAAoBjB,EAAKC,MAAzBgB,gBACRA,GAAgB,GAChBtB,EAAOK,EAAKF,MAAMF,OACfrB,KAAK,SAACI,GACLqB,EAAKgB,SAAS,CAAE8B,OAAQ9C,EAAKgD,WAAWrE,IAAU,WAChDsC,GAAgB,OAGnB1B,MAAM,SAACC,GACNyD,MAAM,kBACNjD,EAAKgB,SAAS,CAAEpB,MAAO,UAI7BoD,WAAa,SAACrE,GACZ,OAAOA,EAAM0D,IAAI,SAACxD,GAChB,OAAOI,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEC,MAAO,OACPsD,QAAS,CAACvD,EAAKuD,QAAUvD,EAAKuD,QAAU,kBAK9Cc,kBAAoB,SAAC1D,GACnB,IAAMY,EAAQZ,EAAEmB,OAAOP,MACvBJ,EAAKgB,SAAS,CAAEpB,MAAOQ,OAGzB+C,mDAAe,SAAAhD,EAAOX,GAAP,OAAAa,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACblB,EAAE4D,iBACFpD,EAAK+C,gBAFQ,wBAAAvC,EAAAM,SAAAX,EAAAY,uIAKN,IACCnB,EAAUmB,KAAKjB,MAAfF,MADDsB,EAEmCH,KAAKd,MAAvCoD,EAFDnC,EAECmC,aAAcpC,EAFfC,EAEeD,gBAChBqC,EAAWvC,KAAKjB,MAAMgD,OAC5B,OACEzB,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,gBACbF,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,oBACbF,EAAAf,EAAAgB,cAACiC,EAAA,EAAD,CAAMC,GAAG,IAAIjC,UAAU,gBAAvB,SAGAF,EAAAf,EAAAgB,cAAA,QACEmC,SAAU1C,KAAKoC,aACf5B,UAAU,8BAEVF,EAAAf,EAAAgB,cAAA,SACEoC,KAAK,OACLC,YAAY,4BACZvD,MAAOR,EACP4B,SAAUT,KAAKmC,sBAIrB7B,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,wBACbF,EAAAf,EAAAgB,cAAA,MAAIC,UAAU,cACZF,EAAAf,EAAAgB,cAACsC,EAAD,CACEzC,QAASkC,EACTZ,WACsB,IAApBa,EAASO,OAAT,mBAAAvF,OACuBsB,GACnB,uBAEN8C,SAAUY,GAAY,GACtBrC,gBAAiBA,cA9ESS,aCDnBoC,mLAQV,IAAAC,EACwChD,KAAKd,MAAM+D,QAAlDC,EADDF,EACCE,iBAAkBC,EADnBH,EACmBG,WAAYC,EAD/BJ,EAC+BI,KACtC,OACE9C,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,cACbF,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,oBACbF,EAAAf,EAAAgB,cAAA,sBAEDP,KAAKd,MAAMmE,UAAY/C,EAAAf,EAAAgB,cAAA,KAAGC,UAAU,WAAb,cAAwC,GAChEF,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,sBACbF,EAAAf,EAAAgB,cAAA,WACED,EAAAf,EAAAgB,cAACsC,EAAD,CACEzC,QAASJ,KAAKd,MAAMoD,aACpBZ,WAAW,oBACXC,SAAUuB,EACVhD,gBAAiBF,KAAKd,MAAMgB,kBAE9BI,EAAAf,EAAAgB,cAACsC,EAAD,CACEzC,QAASJ,KAAKd,MAAMoD,aACpBZ,WAAW,eACXC,SAAUwB,EACVjD,gBAAiBF,KAAKd,MAAMgB,kBAE9BI,EAAAf,EAAAgB,cAACsC,EAAD,CACEzC,QAASJ,KAAKd,MAAMoD,aACpBZ,WAAW,YACXC,SAAUyB,EACVlD,gBAAiBF,KAAKd,MAAMgB,oBAIlCI,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,eACbF,EAAAf,EAAAgB,cAACiC,EAAA,EAAD,CAAMhC,UAAU,cAAciC,GAAG,WAAjC,uBAvCiC9B,aCmF5B2C,6MAhFbvE,MAAQ,CACNnB,MAAO,GACPqF,QAAS,CACPC,iBAAkB,GAClBC,WAAY,GACZC,KAAM,IAERC,WAAW,KAGbnD,gBAAkB,SAACb,GACjBJ,EAAKgB,SAAS,SAAClB,GAAD,MAAY,CACxBsE,UAAWhE,QAIfiD,aAAe,WACbjF,IACGG,KAAK,SAACI,GACLqB,EAAKgB,SAAS,SAAClB,GAAD,MAAY,CACxBnB,WAEFqB,EAAKiB,iBAAgB,GACrBxB,QAAQ6E,IAAI,yCAA0C3F,GACtDqB,EAAKuE,oBAENhF,MAAM,SAACC,GAAD,OAAOyD,MAAMzD,QAGxB+E,gBAAkB,WAAM,IAAAC,EACKxE,EAAKF,MAAxBnB,EADc6F,EACd7F,MAAOqF,EADOQ,EACPR,QACK/E,OAAOwF,KAAKT,GACpB3B,IAAI,SAACF,GACf,OAAOnC,EAAKgB,SAAS,SAAClB,GAAD,MAAY,CAC/BkE,QAAQ/E,OAAAC,EAAA,EAAAD,CAAA,GACHa,EAAMkE,QADJ/E,OAAAyF,EAAA,EAAAzF,CAAA,GAEJkD,EAAQnC,EAAK2E,gBAAgBhG,EAAOwD,aAM7CwC,gBAAkB,SAAChG,EAAO8D,GACxB,OAAO9D,EAAMiG,OAAO,SAAC/F,GAAD,OAAUA,EAAKC,QAAU2D,wFAI7C1B,KAAKsC,gDAGE,IAAAwB,EAAA9D,KAAA+D,EACwB/D,KAAKjB,MAA5BkE,EADDc,EACCd,QAASI,EADVU,EACUV,UACjB,OACE/C,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,OACbF,EAAAf,EAAAgB,cAACyD,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACN7D,EAAAf,EAAAgB,cAAC6D,EAAD,CACEnB,QAASA,EACTX,aAAcwB,EAAKxB,aACnBpC,gBAAiB4D,EAAK5D,gBACtBmD,UAAWA,OAIjB/C,EAAAf,EAAAgB,cAACyD,EAAA,EAAD,CACEE,KAAK,UACLC,OAAQ,kBACN7D,EAAAf,EAAAgB,cAAC8D,EAAD,CACE/B,aAAcwB,EAAKxB,aACnBpC,gBAAiB4D,EAAK5D,6BAxEboE,IAAM3D,iBCD7B4D,IAASJ,OACP7D,EAAAf,EAAAgB,cAACiC,EAAA,EAAD,KACElC,EAAAf,EAAAgB,cAACiE,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.73e183e8.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n  token = localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  })\r\n    .then((res) => res.json())\r\n    .catch((e) => console.error(e));\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { update } from \"../BooksAPI\";\r\n\r\nexport default class BookSelectOptions extends Component {\r\n  static propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    getData: PropTypes.func,\r\n    onChangeLoading: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    selected: this.props.book.shelf,\r\n  };\r\n\r\n  handleChange = async (e) => {\r\n    const { value } = e.target;\r\n    await this.setSelectedShelf(value);\r\n    this.updateData();\r\n  };\r\n\r\n  setSelectedShelf = (value) => {\r\n    this.setState((state) => ({\r\n      selected: value,\r\n    }));\r\n    if (this.props.onChangeLoading) {\r\n      this.props.onChangeLoading(true);\r\n    }\r\n  };\r\n\r\n  updateData = () => {\r\n    const { book, getData } = this.props;\r\n    const selectedShelf = this.state.selected;\r\n    update(book, selectedShelf).then(() => {\r\n      getData();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select value={this.state.selected || \"\"} onChange={this.handleChange}>\r\n          <option value=\"move\" disabled>\r\n            Move to...\r\n          </option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookSelectOptions from \"./BookSelectOptions\";\r\n\r\nexport default class BookComponent extends Component {\r\n  static propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    getData: PropTypes.func,\r\n    onChangeLoading: PropTypes.func,\r\n  };\r\n\r\n  render() {\r\n    const { book, getData, onChangeLoading } = this.props;\r\n    return (\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div\r\n              className=\"book-cover\"\r\n              style={{\r\n                width: 128,\r\n                height: 193,\r\n                backgroundImage: `url(${book.imageLinks.smallThumbnail})`,\r\n              }}\r\n            />\r\n            <BookSelectOptions\r\n              getData={getData}\r\n              book={book}\r\n              onChangeLoading={onChangeLoading}\r\n            />\r\n          </div>\r\n          <div className=\"book-title\">{book.title}</div>\r\n          <div className=\"book-authors\">\r\n            {book.authors.map((author) => (\r\n              <span key={author}>\r\n                - {author}\r\n                <br />\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookComponent from \"./BookComponent\";\r\n\r\nexport default class BookShelf extends Component {\r\n  static propTypes = {\r\n    shelfTitle: PropTypes.string.isRequired,\r\n    BookList: PropTypes.array.isRequired,\r\n    getData: PropTypes.func.isRequired,\r\n    onChangeLoading: PropTypes.func,\r\n  };\r\n\r\n  render() {\r\n    const { shelfTitle, BookList, getData, onChangeLoading } = this.props;\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{shelfTitle}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {BookList &&\r\n              BookList.map((book, index) => (\r\n                <BookComponent\r\n                  key={index}\r\n                  book={book}\r\n                  getData={getData}\r\n                  onChangeLoading={onChangeLoading}\r\n                />\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { search } from \"../../BooksAPI\";\r\nimport BookShelf from \"../BookShelf\";\r\n\r\nexport default class SearchPage extends Component {\r\n  static propTypes = {\r\n    getBooksData: PropTypes.func.isRequired,\r\n    onChangeLoading: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    query: \"\",\r\n    result: [],\r\n  };\r\n\r\n  getSearchData = () => {\r\n    const { onChangeLoading } = this.props;\r\n    onChangeLoading(true);\r\n    search(this.state.query)\r\n      .then((books) => {\r\n        this.setState({ result: this.onAddShelf(books) }, () => {\r\n          onChangeLoading(false);\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        alert(\"Wrong Keywords\");\r\n        this.setState({ query: \"\" });\r\n      });\r\n  };\r\n\r\n  onAddShelf = (books) => {\r\n    return books.map((book) => {\r\n      return {\r\n        ...book,\r\n        shelf: \"none\",\r\n        authors: [book.authors ? book.authors : \"unknown\"],\r\n      };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.getSearchData();\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n    const { getBooksData, onChangeLoading } = this.props;\r\n    const bookList = this.state.result;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <form\r\n            onSubmit={this.handleSubmit}\r\n            className=\"search-books-input-wrapper\"\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              value={query}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </form>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            <BookShelf\r\n              getData={getBooksData}\r\n              shelfTitle={\r\n                bookList.length !== 0\r\n                  ? `Search Result : ${query}`\r\n                  : \"Search your Keywords\"\r\n              }\r\n              BookList={bookList || []}\r\n              onChangeLoading={onChangeLoading}\r\n            />\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookShelf from \"../BookShelf\";\r\n\r\nexport default class BookShelfList extends Component {\r\n  static propTypes = {\r\n    shelves: PropTypes.object.isRequired,\r\n    getBooksData: PropTypes.func.isRequired,\r\n    onChangeLoading: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const { currentlyReading, wantToRead, read } = this.props.shelves;\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        {this.props.isLoading ? <p className=\"loading\">Loading...</p> : \"\"}\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <BookShelf\r\n              getData={this.props.getBooksData}\r\n              shelfTitle=\"Currently Reading\"\r\n              BookList={currentlyReading}\r\n              onChangeLoading={this.props.onChangeLoading}\r\n            />\r\n            <BookShelf\r\n              getData={this.props.getBooksData}\r\n              shelfTitle=\"Want To Read\"\r\n              BookList={wantToRead}\r\n              onChangeLoading={this.props.onChangeLoading}\r\n            />\r\n            <BookShelf\r\n              getData={this.props.getBooksData}\r\n              shelfTitle=\"Read Done\"\r\n              BookList={read}\r\n              onChangeLoading={this.props.onChangeLoading}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link className=\"search-link\" to=\"/search\">\r\n            Add a Book\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport SearchPage from \"./Components/Pages/SearchPage\";\r\nimport BookShelfList from \"./Components/Pages/BookShelfList\";\r\nimport { getAll } from \"./BooksAPI\";\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: {},\r\n    shelves: {\r\n      currentlyReading: [],\r\n      wantToRead: [],\r\n      read: [],\r\n    },\r\n    isLoading: true,\r\n  };\r\n\r\n  onChangeLoading = (value) => {\r\n    this.setState((state) => ({\r\n      isLoading: value,\r\n    }));\r\n  };\r\n\r\n  getBooksData = () => {\r\n    getAll()\r\n      .then((books) => {\r\n        this.setState((state) => ({\r\n          books,\r\n        }));\r\n        this.onChangeLoading(false);\r\n        console.log(\"BookShelfList -> getBooksData -> books\", books);\r\n        this.categorizeBooks();\r\n      })\r\n      .catch((e) => alert(e));\r\n  };\r\n\r\n  categorizeBooks = () => {\r\n    const { books, shelves } = this.state;\r\n    const shelfTitles = Object.keys(shelves);\r\n    shelfTitles.map((title) => {\r\n      return this.setState((state) => ({\r\n        shelves: {\r\n          ...state.shelves,\r\n          [title]: this.filterBookShelf(books, title),\r\n        },\r\n      }));\r\n    });\r\n  };\r\n\r\n  filterBookShelf = (books, shelfTitle) => {\r\n    return books.filter((book) => book.shelf === shelfTitle);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBooksData();\r\n  }\r\n\r\n  render() {\r\n    const { shelves, isLoading } = this.state;\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <BookShelfList\r\n              shelves={shelves}\r\n              getBooksData={this.getBooksData}\r\n              onChangeLoading={this.onChangeLoading}\r\n              isLoading={isLoading}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/search\"\r\n          render={() => (\r\n            <SearchPage\r\n              getBooksData={this.getBooksData}\r\n              onChangeLoading={this.onChangeLoading}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}